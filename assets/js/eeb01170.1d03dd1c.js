"use strict";(self.webpackChunkdocumentation=self.webpackChunkdocumentation||[]).push([[77520],{27506:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>d,contentTitle:()=>o,default:()=>h,frontMatter:()=>s,metadata:()=>l,toc:()=>c});var a=r(74848),n=r(28453),i=r(21678);r(27293),r(28774);const s={},o="Player Near Location Event",l={id:"adapters/BasicAdapter/entries/event/on_player_near_location",title:"Player Near Location Event",description:"The PlayerNearLocationEventEntry class represents an event that is triggered when a player is within a certain range of a location.",source:"@site/docs/adapters/BasicAdapter/entries/event/on_player_near_location.mdx",sourceDirName:"adapters/BasicAdapter/entries/event",slug:"/adapters/BasicAdapter/entries/event/on_player_near_location",permalink:"/TypeWriter/beta/adapters/BasicAdapter/entries/event/on_player_near_location",draft:!1,unlisted:!1,editUrl:"https://github.com/gabber235/TypeWriter/tree/develop/documentation/docs/adapters/BasicAdapter/entries/event/on_player_near_location.mdx",tags:[],version:"current",frontMatter:{},sidebar:"adapters",previous:{title:"Player Kill Player Event",permalink:"/TypeWriter/beta/adapters/BasicAdapter/entries/event/on_player_kill_player"},next:{title:"Player Quit Event",permalink:"/TypeWriter/beta/adapters/BasicAdapter/entries/event/on_player_quit"}},d={},c=[{value:"How could this be used?",id:"how-could-this-be-used",level:2},{value:"Fields",id:"fields",level:2}];function p(e){const t={code:"code",h1:"h1",h2:"h2",p:"p",...(0,n.R)(),...e.components};return i||u("fields",!1),i.EntryField||u("fields.EntryField",!0),(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(t.h1,{id:"player-near-location-event",children:"Player Near Location Event"}),"\n",(0,a.jsxs)(t.p,{children:["The ",(0,a.jsx)(t.code,{children:"PlayerNearLocationEventEntry"})," class represents an event that is triggered when a player is within a certain range of a location."]}),"\n",(0,a.jsx)(t.h2,{id:"how-could-this-be-used",children:"How could this be used?"}),"\n",(0,a.jsx)(t.p,{children:"This could be used to create immersive gameplay experiences such as triggering a special event or dialogue when a player approaches a specific location.\nFor example, when a player gets close to a hidden treasure, a hint could be revealed or a guardian could spawn."}),"\n",(0,a.jsx)(t.h2,{id:"fields",children:"Fields"}),"\n",(0,a.jsx)(i.EntryField,{name:"Triggers",required:!0,multiple:!0}),"\n",(0,a.jsx)(i.EntryField,{name:"Location",required:!0,children:(0,a.jsx)(t.p,{children:"The location the player should be near."})}),"\n",(0,a.jsx)(i.EntryField,{name:"Range",required:!0,children:(0,a.jsx)(t.p,{children:"The range within which the event should trigger."})})]})}function h(e={}){const{wrapper:t}={...(0,n.R)(),...e.components};return t?(0,a.jsx)(t,{...e,children:(0,a.jsx)(p,{...e})}):p(e)}function u(e,t){throw new Error("Expected "+(t?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}}}]);