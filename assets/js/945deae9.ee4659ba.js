"use strict";(self.webpackChunkdocumentation=self.webpackChunkdocumentation||[]).push([[76583],{2058:(e,i,t)=>{t.r(i),t.d(i,{assets:()=>o,contentTitle:()=>c,default:()=>p,frontMatter:()=>d,metadata:()=>s,toc:()=>l});var n=t(74848),a=t(28453),r=t(21678);t(27293),t(28774);const d={},c="Cinematic Audience",s={id:"adapters/BasicAdapter/entries/audience/cinematic_audience",title:"Cinematic Audience",description:"The Cinematic Audience entry filters an audience based on if they are in a cinematic.",source:"@site/docs/adapters/BasicAdapter/entries/audience/cinematic_audience.mdx",sourceDirName:"adapters/BasicAdapter/entries/audience",slug:"/adapters/BasicAdapter/entries/audience/cinematic_audience",permalink:"/TypeWriter/beta/adapters/BasicAdapter/entries/audience/cinematic_audience",draft:!1,unlisted:!1,editUrl:"https://github.com/gabber235/TypeWriter/tree/develop/documentation/docs/adapters/BasicAdapter/entries/audience/cinematic_audience.mdx",tags:[],version:"current",frontMatter:{},sidebar:"adapters",previous:{title:"Boss Bar",permalink:"/TypeWriter/beta/adapters/BasicAdapter/entries/audience/boss_bar"},next:{title:"Closest Group Member Path Stream",permalink:"/TypeWriter/beta/adapters/BasicAdapter/entries/audience/closest_group_member_path_stream"}},o={},l=[{value:"How could this be used?",id:"how-could-this-be-used",level:2},{value:"Fields",id:"fields",level:2}];function u(e){const i={code:"code",h1:"h1",h2:"h2",p:"p",...(0,a.R)(),...e.components};return r||m("fields",!1),r.EntryField||m("fields.EntryField",!0),(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(i.h1,{id:"cinematic-audience",children:"Cinematic Audience"}),"\n",(0,n.jsxs)(i.p,{children:["The ",(0,n.jsx)(i.code,{children:"Cinematic Audience"})," entry filters an audience based on if they are in a cinematic."]}),"\n",(0,n.jsx)(i.p,{children:"If no cinematic is referenced, it will filter based on if any cinematic is active."}),"\n",(0,n.jsx)(i.h2,{id:"how-could-this-be-used",children:"How could this be used?"}),"\n",(0,n.jsx)(i.p,{children:"This could be used to hide the sidebar or boss bar when a cinematic is playing."}),"\n",(0,n.jsx)(i.h2,{id:"fields",children:"Fields"}),"\n",(0,n.jsx)(r.EntryField,{name:"Children",required:!0,multiple:!0}),"\n",(0,n.jsx)(r.EntryField,{name:"Cinematic",required:!0,children:(0,n.jsx)(i.p,{children:"When not set it will filter based on if any cinematic is active."})}),"\n",(0,n.jsx)(r.EntryField,{name:"Inverted",required:!0})]})}function p(e={}){const{wrapper:i}={...(0,a.R)(),...e.components};return i?(0,n.jsx)(i,{...e,children:(0,n.jsx)(u,{...e})}):u(e)}function m(e,i){throw new Error("Expected "+(i?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}}}]);