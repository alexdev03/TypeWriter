"use strict";(self.webpackChunkdocumentation=self.webpackChunkdocumentation||[]).push([[54276],{57099:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>c,contentTitle:()=>s,default:()=>m,frontMatter:()=>n,metadata:()=>d,toc:()=>l});var r=a(74848),o=a(28453),i=a(21678);a(27293),a(28774);const n={},s="Combat Fact",d={id:"adapters/CombatLogXAdapter/entries/fact/combat_fact",title:"Combat Fact",description:"A fact that tells whether a player is in combat.",source:"@site/docs/adapters/CombatLogXAdapter/entries/fact/combat_fact.mdx",sourceDirName:"adapters/CombatLogXAdapter/entries/fact",slug:"/adapters/CombatLogXAdapter/entries/fact/combat_fact",permalink:"/TypeWriter/beta/adapters/CombatLogXAdapter/entries/fact/combat_fact",draft:!1,unlisted:!1,editUrl:"https://github.com/gabber235/TypeWriter/tree/develop/documentation/docs/adapters/CombatLogXAdapter/entries/fact/combat_fact.mdx",tags:[],version:"current",frontMatter:{},sidebar:"adapters",previous:{title:"Player Exit Combat Event",permalink:"/TypeWriter/beta/adapters/CombatLogXAdapter/entries/event/on_player_exit_combat"},next:{title:"Entity Adapter",permalink:"/TypeWriter/beta/adapters/EntityAdapter/"}},c={},l=[{value:"How could this be used?",id:"how-could-this-be-used",level:2},{value:"Fields",id:"fields",level:2}];function p(e){const t={a:"a",h1:"h1",h2:"h2",p:"p",...(0,o.R)(),...e.components};return i||b("fields",!1),i.CommentField||b("fields.CommentField",!0),i.EntryField||b("fields.EntryField",!0),i.ReadonlyFactInfo||b("fields.ReadonlyFactInfo",!0),(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(t.h1,{id:"combat-fact",children:"Combat Fact"}),"\n",(0,r.jsxs)(t.p,{children:["A ",(0,r.jsx)(t.a,{href:"/docs/facts",children:"fact"})," that tells whether a player is in combat."]}),"\n",(0,r.jsx)(i.ReadonlyFactInfo,{}),"\n",(0,r.jsx)(t.h2,{id:"how-could-this-be-used",children:"How could this be used?"}),"\n",(0,r.jsx)(t.p,{children:"This could be used to disable certain actions when the player is in combat."}),"\n",(0,r.jsx)(t.h2,{id:"fields",children:"Fields"}),"\n",(0,r.jsx)(i.CommentField,{}),"\n",(0,r.jsx)(i.EntryField,{name:"Group",required:!0})]})}function m(e={}){const{wrapper:t}={...(0,o.R)(),...e.components};return t?(0,r.jsx)(t,{...e,children:(0,r.jsx)(p,{...e})}):p(e)}function b(e,t){throw new Error("Expected "+(t?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}}}]);