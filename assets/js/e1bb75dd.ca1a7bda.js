"use strict";(self.webpackChunkdocumentation=self.webpackChunkdocumentation||[]).push([[1713],{53993:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>p,contentTitle:()=>n,default:()=>l,frontMatter:()=>o,metadata:()=>d,toc:()=>c});var s=r(74848),a=r(28453),i=r(21678);r(27293),r(28774);const o={},n="Closest Group Member Path Stream",d={id:"adapters/BasicAdapter/entries/audience/closest_group_member_path_stream",title:"Closest Group Member Path Stream",description:"The Closest Group Member Path Stream entry is a path stream that shows the path to the closest group member.",source:"@site/docs/adapters/BasicAdapter/entries/audience/closest_group_member_path_stream.mdx",sourceDirName:"adapters/BasicAdapter/entries/audience",slug:"/adapters/BasicAdapter/entries/audience/closest_group_member_path_stream",permalink:"/TypeWriter/beta/adapters/BasicAdapter/entries/audience/closest_group_member_path_stream",draft:!1,unlisted:!1,editUrl:"https://github.com/gabber235/TypeWriter/tree/develop/documentation/docs/adapters/BasicAdapter/entries/audience/closest_group_member_path_stream.mdx",tags:[],version:"current",frontMatter:{},sidebar:"adapters",previous:{title:"Cinematic Audience",permalink:"/TypeWriter/beta/adapters/BasicAdapter/entries/audience/cinematic_audience"},next:{title:"Criteria Audience",permalink:"/TypeWriter/beta/adapters/BasicAdapter/entries/audience/criteria_audience"}},p={},c=[{value:"How could this be used?",id:"how-could-this-be-used",level:2},{value:"Fields",id:"fields",level:2}];function h(e){const t={code:"code",h1:"h1",h2:"h2",p:"p",strong:"strong",...(0,a.R)(),...e.components};return i||u("fields",!1),i.EntryField||u("fields.EntryField",!0),(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(t.h1,{id:"closest-group-member-path-stream",children:"Closest Group Member Path Stream"}),"\n",(0,s.jsxs)(t.p,{children:["The ",(0,s.jsx)(t.code,{children:"Closest Group Member Path Stream"})," entry is a path stream that shows the path to the closest group member.\nThe 'Closest Group Member' is determined by the group member that is closest to the player geographically,\n",(0,s.jsx)(t.strong,{children:"Not based on the path distance."})]}),"\n",(0,s.jsx)(t.p,{children:"When the group is not set, the path stream will not display anything.\nPlayers must be in the same world for the path stream to consider them."}),"\n",(0,s.jsx)(t.h2,{id:"how-could-this-be-used",children:"How could this be used?"}),"\n",(0,s.jsx)(t.p,{children:"This could be used to show a path to the closest group member in a group of players.\nWhen a player is lost, they can follow the path to the closest group member."}),"\n",(0,s.jsx)(t.h2,{id:"fields",children:"Fields"}),"\n",(0,s.jsx)(i.EntryField,{name:"Road",required:!0}),"\n",(0,s.jsx)(i.EntryField,{name:"Group",required:!0})]})}function l(e={}){const{wrapper:t}={...(0,a.R)(),...e.components};return t?(0,s.jsx)(t,{...e,children:(0,s.jsx)(h,{...e})}):h(e)}function u(e,t){throw new Error("Expected "+(t?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}}}]);