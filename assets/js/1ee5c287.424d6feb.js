"use strict";(self.webpackChunkdocumentation=self.webpackChunkdocumentation||[]).push([[5023],{87005:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>l,contentTitle:()=>c,default:()=>f,frontMatter:()=>i,metadata:()=>d,toc:()=>o});var r=a(74848),n=a(28453),s=a(21678);a(27293),a(28774);const i={},c="Balance Fact",d={id:"adapters/VaultAdapter/entries/fact/balance_fact",title:"Balance Fact",description:"A fact that represents a player's balance.",source:"@site/docs/adapters/VaultAdapter/entries/fact/balance_fact.mdx",sourceDirName:"adapters/VaultAdapter/entries/fact",slug:"/adapters/VaultAdapter/entries/fact/balance_fact",permalink:"/TypeWriter/beta/adapters/VaultAdapter/entries/fact/balance_fact",draft:!1,unlisted:!1,editUrl:"https://github.com/gabber235/TypeWriter/tree/develop/documentation/docs/adapters/VaultAdapter/entries/fact/balance_fact.mdx",tags:[],version:"current",frontMatter:{},sidebar:"adapters",previous:{title:"Withdraw Balance Action",permalink:"/TypeWriter/beta/adapters/VaultAdapter/entries/action/withdraw_balance"},next:{title:"Permission Fact",permalink:"/TypeWriter/beta/adapters/VaultAdapter/entries/fact/permission_fact"}},l={},o=[{value:"How could this be used?",id:"how-could-this-be-used",level:2},{value:"Fields",id:"fields",level:2}];function p(e){const t={a:"a",h1:"h1",h2:"h2",p:"p",...(0,n.R)(),...e.components};return s||u("fields",!1),s.CommentField||u("fields.CommentField",!0),s.EntryField||u("fields.EntryField",!0),s.ReadonlyFactInfo||u("fields.ReadonlyFactInfo",!0),(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(t.h1,{id:"balance-fact",children:"Balance Fact"}),"\n",(0,r.jsxs)(t.p,{children:["A ",(0,r.jsx)(t.a,{href:"/docs/facts",children:"fact"})," that represents a player's balance."]}),"\n",(0,r.jsx)(s.ReadonlyFactInfo,{}),"\n",(0,r.jsx)(t.h2,{id:"how-could-this-be-used",children:"How could this be used?"}),"\n",(0,r.jsx)(t.p,{children:"This fact could be used to track a player's balance in a game. For example, if the player is rich, allow them to access to a VIP area. If the player is poor, they can't afford to enter."}),"\n",(0,r.jsx)(t.h2,{id:"fields",children:"Fields"}),"\n",(0,r.jsx)(s.CommentField,{}),"\n",(0,r.jsx)(s.EntryField,{name:"Group",required:!0})]})}function f(e={}){const{wrapper:t}={...(0,n.R)(),...e.components};return t?(0,r.jsx)(t,{...e,children:(0,r.jsx)(p,{...e})}):p(e)}function u(e,t){throw new Error("Expected "+(t?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}}}]);